- name: Deploy Docker container
  hosts: localhost
  become: yes
  vars:
    elastic_ip: "{{ lookup('env', 'ELASTIC_IP') }}"
    IMAGE_NAME: strelchenk0nazar/tgbot_deploy
    IMAGE_TAG: tgbot_deploy
  tasks:
    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present

    - name: Check Docker service status
      command: systemctl is-active docker
      register: docker_status
      ignore_errors: yes

    - name: Start Docker service if not active
      systemd:
        name: docker
        state: started
        enabled: yes
      when: docker_status.rc != 0

    - name: Ensure pip is installed
      apt:
        name: python3-pip
        state: present

    - name: Ensure requests library is installed
      pip:
        name: requests
        state: present

    - name: Log in to Docker Hub
      community.docker.docker_login:
        username: strelchenk0nazar
        password: WGdolarpo30N

    - name: Pull Docker image from repository
      community.docker.docker_image:
        name: "{{ IMAGE_NAME }}:{{ IMAGE_TAG }}"
        source: pull

    - name: Stop and remove existing container if any
      community.docker.docker_container:
        name: tgbot_deploy
        state: absent

    - name: Run Docker container
      community.docker.docker_container:
        name: tgbot_deploy
        image: "{{ IMAGE_NAME }}:{{ IMAGE_TAG }}"
        state: started
        ports:
          - "80:80"
