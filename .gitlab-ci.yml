# image: docker:19.03.12

# stages:
#   - deploy

# variables:
#   DOCKERHUB_USERNAME: strelchenk0nazar
#   DOCKERHUB_REPO: strelchenk0nazar/bitcoin_tracker
#   SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY

# deploy:
#   stage: deploy
#   only:
#     - master
#   script:
#     - echo "$SSH_PRIVATE_KEY" | openssl aes-256-cbc -d -pass pass:<your_passphrase> -out ~/.ssh/id_rsa
#     - chmod 600 ~/.ssh/id_rsa
#     - ssh-keyscan 51.20.112.96 >> ~/.ssh/known_hosts
#     - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
#     - docker pull $DOCKERHUB_REPO:latest || true
#     - docker build -t $DOCKERHUB_REPO:latest .
#     - docker push $DOCKERHUB_REPO:latest
#     - ssh -i ~/.ssh/id_rsa ubuntu@51.20.112.96 "cd docker && docker pull $DOCKERHUB_REPO:latest && docker stop bot-container || true && docker rm bot-container || true && docker run -d --name bot-container $DOCKERHUB_REPO:latest"
#   environment:
#     name: production


stages:
  - build
  - push
  - deploy

variables:
  DOCKER_IMAGE: "strelchenk0nazar/tgbot"

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE .
  only:
    - master

push:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
    - docker push $DOCKER_IMAGE
  only:
    - master

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$SSH_HOST "docker pull $DOCKER_IMAGE && docker run -d --name telegram_bot $DOCKER_IMAGE"
  only:
    - master
